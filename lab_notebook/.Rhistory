spec10 <- read.table("./data/cpom_flux_spec_10jun2014.csv", header = T, sep = ",")
spec12 <- read.table("./data/cpom_flux_spec_12jun2014.csv", header = T, sep = ",")
spec17 <- read.table("./data/cpom_flux_spec_17jun2014.csv", header = T, sep = ",")
setwd("/Volumes/Seagate Backup Plus Drive/working_files/current_research/CPOM_Flux/lab_notebook")
spec10 <- read.table("./data/cpom_flux_spec_10jun2014.csv", header = T, sep = ",")
spec12 <- read.table("./data/cpom_flux_spec_12jun2014.csv", header = T, sep = ",")
spec17 <- read.table("./data/cpom_flux_spec_17jun2014.csv", header = T, sep = ",")
spec24 <- read.table("./data/cpom_flux_spec_24jun2014.csv", header = T, sep = ",")
spec01 <- read.table("./data/cpom_flux_spec_1jul2014.csv", header = T, sep = ",")
sod10 <- read.table("./data/cpom_flux_sod_10jun2014.csv", header = T, sep = ",") # imported to get treatment assignments to bod IDs
spec.all <- rbind(spec10, spec12, spec17, spec24, spec01)
a <- (spec.all$abs * 2.303) / 0.01
spec.a <- data.frame(spec.all, a)
day <- c(rep("2014-06-10", length(spec10$bod)), rep("2014-06-12", length(spec12$bod)), rep("2014-06-17", length(spec17$bod)), rep("2014-06-24", length(spec24$bod)), rep("2014-07-01", length(spec01$bod)))
spec.tot <- data.frame(day, spec.a)
treat <- sod10[, c(1, 4, 5)] # selects for the relevant colums from the sod data.frame
spec <- merge(treat, spec.tot, by.x = "bod", by.y = "bod")
E2E3.a <- spec$a[spec$wl == 250] / spec$a[spec$wl == 365]
E4E6.a <- spec$a[spec$wl == 465] / spec$a[spec$wl == 665]
bod250 <- spec$bod[spec$wl == 250]
CPOM250 <- spec$CPOM[spec$wl == 250]
Nutrient250 <- spec$Nutrient[spec$wl == 250]
day250 <- spec$day[spec$wl == 254]
E2E3 <- data.frame(bod250, day250, CPOM250, Nutrient250, E2E3.a, E4E6.a)
names(E2E3) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6")
elapsed10 <- as.numeric(difftime(E2E3$day[E2E3$day == "2014-06-10"], E2E3$day[E2E3$day == "2014-06-10"], units = "days"))
elapsed12 <- as.numeric(difftime(E2E3$day[E2E3$day == "2014-06-12"], E2E3$day[E2E3$day == "2014-06-10"], units = "days"))
elapsed17 <- as.numeric(difftime(E2E3$day[E2E3$day == "2014-06-17"], E2E3$day[E2E3$day == "2014-06-10"], units = "days"))
elapsed24 <- as.numeric(difftime(E2E3$day[E2E3$day == "2014-06-24"], E2E3$day[E2E3$day == "2014-06-10"], units = "days"))
elapsed01 <- as.numeric(difftime(E2E3$day[E2E3$day == "2014-07-01"], E2E3$day[E2E3$day == "2014-06-10"], units = "days"))
elapsed.d <- c(elapsed10, elapsed12, elapsed17, elapsed24, elapsed01)
E.ratios <- data.frame(E2E3[order(as.Date(E2E3$day)), ], elapsed.d, E4E6.a[order(as.Date(E2E3$day)), ])
Eratio <- data.frame(bod250, day250, CPOM250, Nutrient250, E2E3.a, E4E6.a)
elapsed10 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-10"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed12 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-12"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed17 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-17"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed24 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-24"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed01 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-07-01"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed.d <- c(elapsed10, elapsed12, elapsed17, elapsed24, elapsed01)
#### Make Data Frame of Eratio with elapsed time
# the order stmnt is to sort E2E3 and E4E6 so that it matches the sort of elapsed.d
E.ratios <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d, E4E6.a[order(as.Date(Eratio$day)), ])
E.ratios <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
Eratio <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
Eratio
plot(E2E3 ~ E4E6, data = Eratio)
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6")
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6", elapsed.d)
Eratio <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6", elapsed.d)
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6", "elapsed.d")
E2E3.a <- spec$a[spec$wl == 250] / spec$a[spec$wl == 365]
E4E6.a <- spec$a[spec$wl == 465] / spec$a[spec$wl == 665]
bod250 <- spec$bod[spec$wl == 250]
CPOM250 <- spec$CPOM[spec$wl == 250]
Nutrient250 <- spec$Nutrient[spec$wl == 250]
day250 <- spec$day[spec$wl == 254]
Eratio <- data.frame(bod250, day250, CPOM250, Nutrient250, E2E3.a, E4E6.a)
elapsed10 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-10"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed12 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-12"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed17 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-17"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed24 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-24"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed01 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-07-01"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed.d <- c(elapsed10, elapsed12, elapsed17, elapsed24, elapsed01)
Eratio <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
write.table(Eratio, "./data/CPOM_Flux_Eratio.csv", quote = F, row.names = F, sep = ",")
plot(E2E3 ~ E4E6, data = Eratio)
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6", "elapsed.d")
Eratio <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
spec10 <- read.table("./data/cpom_flux_spec_10jun2014.csv", header = T, sep = ",")
spec12 <- read.table("./data/cpom_flux_spec_12jun2014.csv", header = T, sep = ",")
spec17 <- read.table("./data/cpom_flux_spec_17jun2014.csv", header = T, sep = ",")
spec24 <- read.table("./data/cpom_flux_spec_24jun2014.csv", header = T, sep = ",")
spec01 <- read.table("./data/cpom_flux_spec_1jul2014.csv", header = T, sep = ",")
sod10 <- read.table("./data/cpom_flux_sod_10jun2014.csv", header = T, sep = ",") # imported to get treatment assignments to bod IDs
## Combine dates
spec.all <- rbind(spec10, spec12, spec17, spec24, spec01)
To convert the absorbance to absorbance coefficients I am using
> a = 2.303 A / l
Where:
* a = the absorbance coefficient (m^(-1))
* A = the absorbance from the spec
* l = the path length (m), in this case `0.01 m`
a <- (spec.all$abs * 2.303) / 0.01
Add a to the data frame
spec.a <- data.frame(spec.all, a)
#### make date list
day <- c(rep("2014-06-10", length(spec10$bod)), rep("2014-06-12", length(spec12$bod)), rep("2014-06-17", length(spec17$bod)), rep("2014-06-24", length(spec24$bod)), rep("2014-07-01", length(spec01$bod)))
spec.tot <- data.frame(day, spec.a)
### Merge with treatments
treat <- sod10[, c(1, 4, 5)] # selects for the relevant colums from the sod data.frame
spec <- merge(treat, spec.tot, by.x = "bod", by.y = "bod")
## Data Analysis
### Calculate E-ratios
The E2:E3 is the ratio of the absorption at 250 to 365nm and is correlated with the molecular weight of the DOM
Reference
> De Haan H. and T. De Boer. 1987. Applicability of light absorbance and fluorescence as measures of concentration and molecular size of dissolved organic carbon in humic Lake Tjeukemeer. Water Research 21: 731-734.
The E4:E6 is the ratio of the absorption at 465 to 665nm and is shown to be correlated with the amount of humification in the sample.
Reference
> Sensei, N., T. M. Miano, M. R. Provenzano, and G. Brunetti. 1989. Spectroscopic and composition of I.H.S.S. reference and standard fulvic and humic acids of various origin. Science of the Total Environment 81/82: 143-156.
E2E3.a <- spec$a[spec$wl == 250] / spec$a[spec$wl == 365]
E4E6.a <- spec$a[spec$wl == 465] / spec$a[spec$wl == 665]
bod250 <- spec$bod[spec$wl == 250]
CPOM250 <- spec$CPOM[spec$wl == 250]
Nutrient250 <- spec$Nutrient[spec$wl == 250]
day250 <- spec$day[spec$wl == 254]
Eratio <- data.frame(bod250, day250, CPOM250, Nutrient250, E2E3.a, E4E6.a)
elapsed10 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-10"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed12 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-12"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed17 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-17"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed24 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-06-24"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed01 <- as.numeric(difftime(Eratio$day[Eratio$day == "2014-07-01"], Eratio$day[Eratio$day == "2014-06-10"], units = "days"))
elapsed.d <- c(elapsed10, elapsed12, elapsed17, elapsed24, elapsed01)
#### Make Data Frame of Eratio with elapsed time
# the order stmnt is to sort E2E3 and E4E6 so that it matches the sort of elapsed.d
Eratio <- data.frame(Eratio[order(as.Date(Eratio$day)), ], elapsed.d)
names(Eratio) <- c("bod", "day", "CPOM", "nutrient", "E2E3", "E4E6", "elapsed.d")
write.table(Eratio, "./data/CPOM_Flux_Eratio.csv", quote = F, row.names = F, sep = ",")
plot(E2E3 ~ E4E6, data = Eratio)
plot(E2E3 ~ elapsed.d, data = Eratio)
plot(E4E6 ~ elapsed.d, data = Eratio)
plot(E2E3 ~ CPOM, data = Eratio)
plot(E2E3 ~ elapsed.d, data = Eratio)
summary(Eratio$E2E3)
library("lmerTest", lib.loc="~/Library/R/3.1/library")
E2E3.mod <- lmer(E2E3 ~ 1 + elapsed.d * CPOM * nutrient + (1 + elapsed.d|bod), Eratio)
summary(E2E3.mod)
plot(E2E3.mod)
dev.copy(jpeg, "./output/plots/r254_resid_fitted.jpg")
dev.off()
qqnorm(resid(E2E3.mod))
dev.copy(jpeg, "./output/plots/E2E3_qqnorm_resid.jpg")
dev.off()
anova(E2E3.mod)
E2E3.CPOM.mean <- as.numeric(tapply(E2E3$Eratio[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
E2E3.CPOM.mean <- as.numeric(tapply(E2E3$Eratio[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
Eratio$E2E3
E2E3.CPOM.mean <- as.numeric(tapply(Eratio$E2E3[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
E2E3.noCPOM.mean <- as.numeric(tapply(Eratio$E2E3[Eratio$CPOM == "no"], Eratio$elapsed.d[Eratio$CPOM == "no"], mean))
plot(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = expression(paste("DOM Quality (E"_{2}, ":E"_{3}, ") ")), cex = 1.1)
plot(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "yes") #, pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = expression(paste("DOM Quality (E"_{2}, ":E"_{3}, ") ")), cex = 1.1)
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes" & nutrient == "yes", ylim = c(0, 20), col = "dark red", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("10-Jun", "12-Jun", "17-Jun", "24-Jun", "1-Jul"))
axis(2,  las = 2)
text(3, 20, "Leaf + Enriched")
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 20), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 20), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
#    axis#(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 20), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
#    axis#(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
E2E3.raw <- spec$abs[spec$wl == 250] / spec$abs[spec$wl == 365]
plot(E2E3.abs, E2E3.a)
plot(E2E3.raw, E2E3.a)
plot(E2E3.raw, E2E3.a)
log10(E2E3.a)
E2E3.CPOM.mean <- as.numeric(tapply(Eratio$E2E3[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
E2E3.noCPOM.mean <- as.numeric(tapply(Eratio$E2E3[Eratio$CPOM == "no"], Eratio$elapsed.d[Eratio$CPOM == "no"], mean))
plot(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "yes"), pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
plot(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(ratio254 ~ jitter(elapsed.d, 1), data = r254, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E2E3.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E2E3.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 20, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
par(las = 1)
plot(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E2E3 ~ jitter(elapsed.d, 1), data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E2E3.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E2E3.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
par(las = 1)
plot(E2E3 ~ c(1, 3, 8, 15, 22), data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
plot(E2E3 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E2E3 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
elapsed.d.offset1 <- Eratio$elapsed.d + 1
points(E2E3 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E2E3.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E2E3.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
par(las = 1)
plot(E2E3 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E2E3 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E2E3.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E2E3.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E2E3_scatterplot.jpg")
dev.off()
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 20), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
#    axis#(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
dev.copy(png, "./output/plots/cpom_flux_ratio254_by_day_CPOM.png")
dev.off()
dev.copy(png, "./output/plots/cpom_flux_E2E3_by_day_CPOM.png")
dev.off()
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 20), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
#    axis#(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
dev.copy(png, "./output/plots/cpom_flux_E2E3_by_day_CPOM.png")
dev.off()
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 20), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
axis(2,  las = 2)
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 25), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
axis(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
par(mfcol = c(1, 2), mar = c(5, 5, 0, 0 ))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "yes", ylim = c(0, 25), col = "white", axes = F, xlab = " ", ylab = "Labile Dissolved Organic Matter (E2:E3)")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21"))
axis(2,  las = 2)
text(3, 17, "Leaf Litter")
par(mar = c(5, 0, 0, 5))
plot(E2E3 ~ day, data = Eratio, subset = CPOM == "no", ylim = c(0, 25), col = 8, axes = F, xlab = " ", ylab = " ")
axis(1, at = c(1, 2, 3, 4, 5), labels = c("0", "2", "7", "14", "21") )
#axis(2,  las = 2)
text(3, 17, "No Leaf Litter")
text(-2, -2, "Days Incubated")
dev.copy(png, "./output/plots/cpom_flux_E2E3_by_day_CPOM.png")
dev.off()
E4E6.CPOM.mean <- as.numeric(tapply(Eratio$E4E6[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
E4E6.noCPOM.mean <- as.numeric(tapply(Eratio$E4E6[Eratio$CPOM == "no"], Eratio$elapsed.d[Eratio$CPOM == "no"], mean))
Create elapsed day vectors offset by 1
elapsed.d.offset1 <- Eratio$elapsed.d + 1
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(0, 20), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
plot(E4E6, elapsed.d, data = Eratio)
plot(E4E6 ~ elapsed.d, data = Eratio)
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 50), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
E4E6.noCPOM.mean <- as.numeric(tapply(Eratio$E4E6[Eratio$CPOM == "no"], Eratio$elapsed.d[Eratio$CPOM == "no"], mean))
E4E6.CPOM.mean <- as.numeric(tapply(Eratio$E4E6[Eratio$CPOM == "yes"], Eratio$elapsed.d[Eratio$CPOM == "yes"], mean))
E4E6.noCPOM.mean <- as.numeric(tapply(Eratio$E4E6[Eratio$CPOM == "no"], Eratio$elapsed.d[Eratio$CPOM == "no"], mean))
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 55), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 15, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 55), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 50, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
E4E6.noCPOM.mean
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 55), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
# points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
# points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 50, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 55), xlab = "Days of Incubation", ylab = "DOM Quality (E2:E3)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
# points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
# points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 55, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
par(las = 1)
plot(E4E6 ~ elapsed.d, data = Eratio, subset = CPOM == "yes", pch = 1, xlim = c(0, 25), ylim = c(-50, 55), xlab = "Days of Incubation", ylab = "DOM Quality (E4:E6)", cex = 1.1)
points(E4E6 ~ elapsed.d.offset1, data = Eratio, subset = CPOM == "no", pch = 2, cex = 1.1)
# points(E4E6.CPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 16, cex = 1.6)
# points(E4E6.noCPOM.mean ~ unique(Eratio$elapsed.d), type = "b", pch = 17, cex = 1.6)
legend(15, 55, c("Leaf Litter", "No Leaf Litter"), pch = c(16, 17))
dev.copy(jpeg, "./output/plots/CPOM_Flux_E4E6_scatterplot.jpg")
dev.off()
plot(E2E3.mod)
dev.copy(jpeg, "./output/plots/E2E3_resid_fitted.jpg")
dev.off()
anova(E2E3.mod)
spec10 <- read.table("./data/cpom_flux_spec_10jun2014.csv", header = T, sep = ",")
spec12 <- read.table("./data/cpom_flux_spec_12jun2014.csv", header = T, sep = ",")
spec17 <- read.table("./data/cpom_flux_spec_17jun2014.csv", header = T, sep = ",")
spec24 <- read.table("./data/cpom_flux_spec_24jun2014.csv", header = T, sep = ",")
spec01 <- read.table("./data/cpom_flux_spec_1jul2014.csv", header = T, sep = ",")
sod10 <- read.table("./data/cpom_flux_sod_10jun2014.csv", header = T, sep = ",") # imported to get treatment assignments to bod IDs
## Combine dates
spec.all <- rbind(spec10, spec12, spec17, spec24, spec01)
To convert the absorbance to absorbance coefficients I am using
> a = 2.303 A / l
Where:
* a = the absorbance coefficient (m^(-1))
* A = the absorbance from the spec
* l = the path length (m), in this case `0.01 m`
a <- (spec.all$abs * 2.303) / 0.01
Add a to the data frame
spec.a <- data.frame(spec.all, a)
#### make date list
day <- c(rep("2014-06-10", length(spec10$bod)), rep("2014-06-12", length(spec12$bod)), rep("2014-06-17", length(spec17$bod)), rep("2014-06-24", length(spec24$bod)), rep("2014-07-01", length(spec01$bod)))
spec.tot <- data.frame(day, spec.a)
### Merge with treatments
treat <- sod10[, c(1, 4, 5)] # selects for the relevant colums from the sod data.frame
spec <- merge(treat, spec.tot, by.x = "bod", by.y = "bod")
spec275 <- spec[spec$wl >= 275 & spec$wl <=295]
spec275 <- spec[spec$wl >= 275 & spec$wl <=295, ]
spec275
spec350 <- spec[spec$wl >=350 & spec$wl <= 400, ]
rise275 <- as.numeric(tapply(spec275$a, spec$bod, range))
rise275 <- as.numeric(tapply(spec275$a, spec275$bod, range))
plot(spec275$a ~ spec275$wl)
